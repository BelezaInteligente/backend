{"version":3,"sources":["helpers/history.js","helpers/role.js","helpers/api.js","helpers/reportsBI.js","services/account.service.js","services/user.service.js","services/group.service.js","services/goal.service.js","components/Navbar.jsx","components/Footer.jsx","components/PrivateRoute.jsx","helpers/TableIcons.js","components/Table.jsx","pages/home/Index.jsx","pages/dashboard/DetailDashboard.jsx","pages/dashboard/Index.jsx","pages/account/Login.jsx","pages/account/ForgotPassword.jsx","pages/account/ResetPassword.jsx","pages/account/Index.jsx","pages/profile/Details.jsx","pages/profile/Index.jsx","pages/goal/ListGoal.jsx","pages/goal/Index.jsx","pages/admin/HomeAdmin.jsx","pages/admin/ListUser.jsx","pages/admin/ListGroup.jsx","pages/admin/ListUserGoal.jsx","pages/admin/Index.jsx","app/Index.jsx","helpers/theme.js","index.js"],"names":["history","createBrowserHistory","Role","axiosAPI","axios","create","baseURL","getToken","Authorization","localStorage","getItem","handleLogin","values","a","post","data","handleForgotPassword","email","handleResetPassword","token","getAllUsers","headers","get","handleUserAdd","handleUserUpdate","userID","put","handleUserDelete","delete","handlePassword","getAllGroups","handleGroupAdd","handleGroupUpdate","groupID","handleGroupDelete","getAllGoalsUsers","getGoalById","handleGoalAdd","handleGoalUpdate","goalID","handleGoalDelete","getEmbedToken","reportID","reportsBI","process","GROUP_ID","REPORT_ID","userSubject","BehaviorSubject","accountService","login","logout","clear","next","push","forgotPassword","resetPassword","user","asObservable","value","setItem","accessJwtToken","role","params","userService","getUsers","createUser","updateUser","deleteUser","updatePassword","getEmbedTokenBI","users","id","groupService","getGroups","createGroup","updateGroup","deleteGroup","groups","group","goalService","getGoalsUsers","getGoalUserById","createGoalUser","updateGoalUser","deleteGoalUser","usersGoals","goals","useStyles","makeStyles","theme","appBar","position","boxShadow","borderBottom","palette","grey","borderTop","backgroundColor","toolbar","flexWrap","toolbarTitle","display","alignItems","justifyContent","logo","borderRight","paddingLeft","paddingRight","link","textDecoration","color","navOptions","paddingTop","paddingBottom","minWidth","navButton","marginLeft","spacing","Navbar","classes","useState","currentUser","setCurrentUser","useEffect","subscribe","x","unsubscribe","className","root","AppBar","elevation","Toolbar","disableGutters","Typography","component","variant","noWrap","excat","to","Button","onClick","path","AdminNavBar","match","footer","padding","textAlign","left","bottom","right","Footer","Container","maxWidth","Date","getFullYear","PrivateRoute","Component","roles","rest","render","props","userValue","indexOf","pathname","state","from","location","Add","forwardRef","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","AppTable","columns","title","icons","tableIcons","localization","header","actions","body","emptyDataSourceMessage","editRow","deleteText","searchTooltip","searchPlaceholder","pagination","labelRowsSelect","labelDisplayedRows","firstTooltip","previousTooltip","nextTooltip","lastTooltip","options","actionsColumnIndex","Home","align","name","grid","flexGrow","button","margin","fontSize","width","lineHeight","DetailDashboard","tokenData","setTokenData","report","setReport","basicFilter","$schema","target","table","column","operator","filterType","then","res","embedUrl","reportId","catch","error","console","log","response","Grid","height","item","embedToken","length","embedType","tokenType","accessToken","embedId","permissions","style","extraSettings","filterPaneEnabled","onLoad","setFilters","errors","container","justify","type","size","print","paper","overflow","flexDirection","Dashboard","Paper","marginTop","inputField","forgotLink","Login","passwordType","setPasswordType","visibility","setVisibility","open","setOpen","message","setMessage","useFormik","initialValues","password","validationSchema","Yup","shape","required","min","onSubmit","setTimeout","handleSubmit","handleChange","touched","handleClickVisibility","data-testid","direction","TextField","label","placeholder","onChange","InputProps","startAdornment","MailOutline","FormHelperText","LockOutlined","endAdornment","Visibility","VisibilityOff","Boolean","Collapse","in","Alert","severity","AlertTitle","outlinedRoot","borderColor","emailInput","cancelLink","ForgotPassword","input","homeLink","ResetPassword","isError","setIsError","urlToken","window","search","split","toString","substr","forEach","decodeURIComponent","confirmPassword","oneOf","Account","Details","disabled","fullWidth","defaultValue","Profile","xs","md","lg","ListGoal","tableData","setTableData","isLoading","setIsLoading","messages","setMessages","listGroups","setListGroups","field","hidden","lookup","editable","headerStyle","cellStyle","true","false","updateListGoals","listNames","reduce","acc","cur","onRowUpdate","newData","oldData","Promise","resolve","errorList","undefined","active","dataUpdate","rowUpdate","map","msg","i","key","Goal","HomeAdmin","ListUser","updateListUsers","onRowAdd","dataToAdd","rowAdd","onRowDelete","dataDelete","index","splice","rowDelete","ListGroup","updateListGroups","description","ListUserGoal","listUsers","setListUsers","goalUserID","goalGroupID","Admin","exact","minHeight","content","App","useLocation","slice","createMuiTheme","primary","main","secondary","red","A400","background","default","ReactDOM","ThemeProvider","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.b56d5641.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory();\n","export const Role = {\n  User: 'User',\n  Admin: 'Admin',\n};\n","import axios from 'axios';\n\nexport {\n  // eslint-disable-next-line\n  handleLogin,\n  // eslint-disable-next-line\n  handleForgotPassword,\n  // eslint-disable-next-line\n  handleResetPassword,\n  // eslint-disable-next-line\n  handlePassword,\n  // eslint-disable-next-line\n  handleUserAdd,\n  // eslint-disable-next-line\n  handleUserUpdate,\n  // eslint-disable-next-line\n  handleUserDelete,\n  // eslint-disable-next-line\n  handleGroupAdd,\n  // eslint-disable-next-line\n  handleGroupUpdate,\n  // eslint-disable-next-line\n  handleGroupDelete,\n  // eslint-disable-next-line\n  handleGoalAdd,\n  // eslint-disable-next-line\n  handleGoalUpdate,\n  // eslint-disable-next-line\n  handleGoalDelete,\n  // eslint-disable-next-line\n  getAllUsers,\n  // eslint-disable-next-line\n  getAllGoalsUsers,\n  // eslint-disable-next-line\n  getAllGroups,\n  // eslint-disable-next-line\n  getGoalById,\n  // eslint-disable-next-line\n  getToken,\n  // eslint-disable-next-line\n  getEmbedToken\n};\n\nconst axiosAPI = axios.create({\n  baseURL: \"http://localhost:3000/api/v1\"\n});\n\n// Account\n\nconst getToken = () => ({\n  Authorization: `Bearer ${localStorage.getItem(\"appToken\")}`\n})\n\nconst handleLogin = async (values) => {\n  const { data } = await axiosAPI.post('/authenticate', values)\n  return data\n};\n\nconst handleForgotPassword = async (email) => {\n  const data = await axiosAPI.post('/forgotpassword', { email });\n  return data;\n};\n\nasync function handleResetPassword(token, values) {\n  const data = await axiosAPI.post(`/resetpassword/${token}`, values);\n  return data;\n};\n\n// Users\nconst getAllUsers = async () => {\n  const headers = getToken();\n  const data = await axiosAPI.get(`/admin/users`, { headers });\n  return data;\n};\n\nconst handleUserAdd = async (values) => {\n  const headers = getToken();\n\n  const data = await axiosAPI.post(`/admin/users/add`, values, { headers });\n  return data;\n};\n\nconst handleUserUpdate = async (userID, values) => {\n  const headers = getToken();\n  const data = await axiosAPI.put(`/admin/users/${userID}`, values, { headers });\n  return data;\n};\n\nconst handleUserDelete = async (userID) => {\n  const headers = getToken();\n  const data = await axiosAPI.delete(`/admin/users/${userID}`, { headers });\n  return data;\n};\n\nconst handlePassword = async (userID, values) => {\n  const headers = getToken();\n  const data = await axiosAPI.put(`/user/profile/${userID}`, values, { headers });\n  return data;\n};\n\n// Groups\nconst getAllGroups = async () => {\n  const headers = getToken();\n  const data = await axiosAPI.get(`/groups`, { headers });\n  return data;\n};\n\nconst handleGroupAdd = async (values) => {\n  const headers = getToken();\n\n  const data = await axiosAPI.post(`/admin/groups/add`, values, { headers });\n  return data;\n};\n\nconst handleGroupUpdate = async (groupID, values) => {\n  const headers = getToken();\n  const data = await axiosAPI.put(`/admin/groups/${groupID}`, values, { headers });\n  return data;\n};\n\nconst handleGroupDelete = async (groupID) => {\n  const headers = getToken();\n  const data = await axiosAPI.delete(`/admin/groups/${groupID}`, { headers });\n  return data;\n};\n\n// Goals\nconst getAllGoalsUsers = async () => {\n  const headers = getToken();\n  const data = await axiosAPI.get(`/admin/goals`, { headers });\n  return data;\n};\n\nconst getGoalById = async userID => {\n  const headers = getToken();\n  const data = await axiosAPI.get(`/goals/${userID}`, { headers });\n  return data;\n};\n\nconst handleGoalAdd = async (values) => {\n  const headers = getToken();\n  const data = await axiosAPI.post(`/admin/goals/add`, values, { headers });\n  return data;\n};\n\nconst handleGoalUpdate = async (goalID, values) => {\n  const headers = getToken();\n  const data = await axiosAPI.put(`/goals/${goalID}`, values, { headers });\n  return data;\n};\n\nconst handleGoalDelete = async (goalID) => {\n  const headers = getToken();\n  const data = await axiosAPI.delete(`/admin/goals/${goalID}`, { headers });\n  return data;\n};\n\n// PowerBI Token\nconst getEmbedToken = async (groupID, reportID) => {\n  const headers = getToken();\n  const data = await axiosAPI.get(`/report/${groupID}/${reportID}`, { headers });\n  return data;\n};","export const reportsBI = {\n  groupID: process.env.GROUP_ID || '3d3c4af9-ec7a-4e12-bacd-ceba339db814',\n  reportID: process.env.REPORT_ID || 'f887a260-6855-4216-840b-041dd43a7a68'\n};","import { BehaviorSubject } from 'rxjs';\n\nimport { history } from '../helpers';\nimport { handleLogin, handleForgotPassword, handleResetPassword } from '../helpers';\n\nconst userSubject = new BehaviorSubject(null);\n\nexport const accountService = {\n  login,\n  logout,\n  forgotPassword,\n  resetPassword,\n  user: userSubject.asObservable(),\n  get userValue() {\n    return userSubject.value;\n  },\n};\n\nasync function login(values) {\n  const user = await handleLogin(values);\n  localStorage.setItem('appToken', user.accessJwtToken);\n  localStorage.setItem('userRole', user.role);\n\n  userSubject.next(user);\n  return user;\n};\n\nfunction logout() {\n  localStorage.clear();\n  userSubject.next(null);\n  history.push('/account/login');\n};\n\nasync function forgotPassword(email) {\n  return await handleForgotPassword(email);\n}\n\nasync function resetPassword(token, params) {\n  return await handleResetPassword(token, params);;\n};","import {\n  getAllUsers,\n  getEmbedToken,\n  handleUserAdd,\n  handleUserUpdate,\n  handleUserDelete,\n  handlePassword\n} from '../helpers';\n\nexport const userService = {\n  getUsers,\n  createUser,\n  updateUser,\n  deleteUser,\n  updatePassword,\n  getEmbedTokenBI\n};\n\nasync function getUsers() {\n  const users = await getAllUsers();\n  return users;\n};\n\nasync function createUser(values) {\n  const user = await handleUserAdd(values);\n  return user;\n};\n\nasync function updateUser(id, values) {\n  const users = await handleUserUpdate(id, values);\n  return users;\n};\n\nasync function deleteUser(id) {\n  const user = await handleUserDelete(id);\n  return user;\n};\n\nasync function updatePassword(id, params) {\n  const user = await handlePassword(id, params);\n  return user;\n};\n\nasync function getEmbedTokenBI(groupID, reportID) {\n  const data = await getEmbedToken(groupID, reportID);\n  return data;\n}","import { getAllGroups, handleGroupAdd, handleGroupUpdate, handleGroupDelete } from '../helpers';\n\nexport const groupService = {\n  getGroups,\n  createGroup,\n  updateGroup,\n  deleteGroup,\n};\n\nasync function getGroups() {\n  const groups = await getAllGroups();\n  return groups;\n};\n\nasync function createGroup(values) {\n  const group = await handleGroupAdd(values);\n  return group;\n};\n\nasync function updateGroup(id, values) {\n  const group = await handleGroupUpdate(id, values);\n  return group;\n};\n\nasync function deleteGroup(id) {\n  const group = await handleGroupDelete(id);\n  return group;\n};","import { getAllGoalsUsers, getGoalById, handleGoalAdd, handleGoalUpdate, handleGoalDelete } from '../helpers';\n\nexport const goalService = {\n  getGoalsUsers,\n  getGoalUserById,\n  createGoalUser,\n  updateGoalUser,\n  deleteGoalUser,\n};\n\nasync function getGoalsUsers() {\n  const usersGoals = await getAllGoalsUsers();\n  return usersGoals;\n};\n\nasync function getGoalUserById(id) {\n  const goals = await getGoalById(id);\n  return goals;\n};\n\nasync function createGoalUser(values) {\n  const goals = await handleGoalAdd(values);\n  return goals;\n};\n\nasync function updateGoalUser(id, values) {\n  const goals = await handleGoalUpdate(id, values);\n  return goals;\n};\n\nasync function deleteGoalUser(id) {\n  const goals = await handleGoalDelete(id);\n  return goals;\n};\n","import React, { useState, useEffect } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\n\nimport { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { accountService } from '../services';\nimport { Role } from '../helpers';\n\n//const logo = require('../images/logo.svg');\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n    boxShadow: 'none',\n    borderBottom: `1px solid ${theme.palette.grey['A100']}`,\n    borderTop: `1px solid ${theme.palette.grey['A100']}`,\n    backgroundColor: 'white',\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  logo: {\n    display: 'inline',\n    borderRight: `1px solid ${theme.palette.grey['A100']}`,\n    paddingLeft: 24,\n    paddingRight: 24,\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n  navOptions: {\n    textDecoration: 'none',\n    color: 'inherit',\n    paddingTop: 10,\n    paddingBottom: 10,\n    minWidth: 'auto',\n  },\n  navButton: {\n    marginLeft: theme.spacing(2),\n  },\n}));\n\nfunction Navbar() {\n  const classes = useStyles();\n  const [currentUser, setCurrentUser] = useState({});\n\n  // const [showAdminBoard, setShowAdminBoard] = useState(false);\n  // const [showUserBoard, setShowUserBoard] = useState(false);\n\n  useEffect(() => {\n    const subscription = accountService.user.subscribe((x) => setCurrentUser(x));\n\n    // if (currentUser) {\n    //   console.log('User: ' + currentUser.role);\n    //   setShowUserBoard(currentUser.role === Role.User ? true : false);\n    //   setShowAdminBoard(currentUser.role === Role.Admin ? true : false);\n    // };\n\n    return subscription.unsubscribe;\n  }, []);\n\n  // if (!currentUser) {\n  //   return null;\n  // };\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"absolute\"\n        color=\"default\"\n        elevation={0}\n        className={classes.appBar}\n      >\n        <Toolbar className={classes.toolbar} disableGutters={true}>\n          <div className={classes.logo}>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              className={classes.toolbarTitle}\n            >\n              <NavLink excat to=\"/\" className={classes.link}>\n                {/* <img width={20} src={logo} alt=\"\" /> */}\n                Beleza Inteligente\n              </NavLink>\n            </Typography>\n          </div>\n\n          <NavLink to=\"/\" className={classes.navOptions}>\n            <Button>Home</Button>\n          </NavLink>\n\n          {currentUser && (\n            <NavLink to=\"/dashboard\" className={classes.navOptions}>\n              <Button>Dashboard</Button>\n            </NavLink>\n          )}\n\n          {localStorage.getItem(\"userRole\") === Role.User && (\n            <NavLink to=\"/goal\" className={classes.navOptions}>\n              <Button>Metas</Button>\n            </NavLink>\n          )}\n\n          {currentUser && (\n            <NavLink to=\"/profile\" className={classes.navOptions}>\n              <Button>Perfil</Button>\n            </NavLink>\n          )}\n\n          {localStorage.getItem(\"userRole\") === Role.Admin && (\n            <NavLink to=\"/admin\" className={classes.navOptions}>\n              <Button>Admin</Button>\n            </NavLink>\n          )}\n\n          {currentUser ? (\n            <Button onClick={accountService.logout} className={classes.navOptions}>\n              Sair\n            </Button>\n          ) : (\n              <NavLink to=\"/account/login\" className={classes.navOptions}>\n                <Button>Login</Button>\n              </NavLink>\n            )}\n\n          <Route path=\"/admin\" component={AdminNavBar} />\n\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nfunction AdminNavBar({ match }) {\n  const { path } = match;\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"absolute\" color=\"default\" className={classes.appBar}>\n      <Toolbar className={classes.toolbar} disableGutters={true}>\n        <NavLink to={`${path}/users`} className={classes.link}>\n          <Button>Usuários</Button>\n        </NavLink>\n        <NavLink to={`${path}/groups`} className={classes.link}>\n          <Button>Grupos</Button>\n        </NavLink>\n        <NavLink to={`${path}/goals`} className={classes.link}>\n          <Button>Metas</Button>\n        </NavLink>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport { Navbar };\n","import React from 'react';\n\nimport { Container, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    padding: 5,\n    textAlign: \"center\",\n    left: 0,\n    bottom: 0,\n    right: 0,\n  },\n}));\n\nfunction Footer() {\n  const classes = useStyles();\n\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"sm\">\n        <Typography variant=\"body2\" color=\"textSecondary\">\n          Copyright ©\n          BelezaInteligente - contato@belezainteligente.app\n          {' '}\n          {new Date().getFullYear()}.\n        </Typography>\n      </Container>\n    </footer>\n  );\n}\n\nexport { Footer };\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nimport { accountService } from '../services';\n\nfunction PrivateRoute({ component: Component, roles, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        const user = accountService.userValue;\n        if (!user) {\n          return (\n            <Redirect\n              to={{ pathname: '/account/login', state: { from: props.location } }}\n            />\n          );\n        }\n\n        if (roles && roles.indexOf(user.role) === -1) {\n          return <Redirect to={{ pathname: '/' }} />;\n        }\n        // return <Redirect to={{ pathname: '/' }} />;\n\n        return <Component {...props} />;\n      }}\n    />\n  );\n}\n\nexport { PrivateRoute };\n","import React, { forwardRef } from \"react\";\nimport {\n  AddBox,\n  ArrowUpward,\n  Check,\n  ChevronLeft,\n  ChevronRight,\n  Clear,\n  DeleteOutline,\n  Edit,\n  FilterList,\n  FirstPage,\n  LastPage,\n  Remove,\n  SaveAlt,\n  Search,\n  ViewColumn\n} from \"@material-ui/icons\";\n\nexport default {\n  // tableIcons\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n","import React from \"react\";\nimport MaterialTable from \"material-table\";\nimport tableIcons from \"../helpers/TableIcons.js\";\n\nexport default function AppTable({ data, columns, ...rest }) {\n  return (\n    <MaterialTable\n      {...rest}\n      title=\"\"\n      icons={tableIcons}\n      columns={columns}\n      data={data}\n      localization={{\n        header: {\n          actions: '',\n        },\n        body: {\n          emptyDataSourceMessage: 'Nenhum registro para exibir!',\n          editRow: {\n            deleteText: 'Você tem certeza que quer deletar este registro?',\n          },\n        },\n        toolbar: {\n          searchTooltip: 'Pesquisar',\n          searchPlaceholder: 'Pesquisar',\n        },\n        pagination: {\n          labelRowsSelect: 'linhas',\n          labelDisplayedRows: '{count} de {from}-{to}',\n          firstTooltip: 'Primeira página',\n          previousTooltip: 'Página anterior',\n          nextTooltip: 'Próxima página',\n          lastTooltip: 'Última página',\n        },\n      }}\n      options={{\n        actionsColumnIndex: -1,\n      }}\n    />\n  );\n};","import React from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nimport { accountService } from '../../services';\n\n\nfunction Home() {\n  const user = accountService.userValue;\n\n  return (\n    <>\n      <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\" component=\"p\">\n        Bem vindo,\n      </Typography>\n      <Typography variant=\"h5\" align=\"left\" color=\"textSecondary\" component=\"p\">\n        {user.name}\n      </Typography>\n    </>\n  );\n}\n\nexport { Home };\n\n      // <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\" component=\"p\">\n      //   Bem vindo ao Beleza Inteligente\n      // </Typography>\n      // <Typography variant=\"h5\" align=\"left\" color=\"textSecondary\" component=\"p\">\n      //   Faça login para vizualizar seus relatórios!\n      // </Typography>","import React, { useState, useEffect } from 'react';\n\nimport { Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Report } from 'powerbi-report-component';\n\nimport { accountService, userService } from '../../services';\nimport { reportsBI } from '../../helpers';\n\nconst useStyles = makeStyles((theme) => ({\n\tgrid: {\n\t\tflexGrow: 1,\n\t\tpaddingTop: 5,\n\t},\n\tbutton: {\n\t\tmargin: theme.spacing(1),\n\t\tfontSize: 16,\n\t\tpadding: '6px 12px',\n\t\twidth: 200,\n\t\tlineHeight: 1.5,\n\t},\n}));\n\nfunction DetailDashboard() {\n\tconst classes = useStyles();\n\tconst [tokenData, setTokenData] = useState([]);\n\tconst [report, setReport] = useState(null);\n\tconst user = accountService.userValue;\n\n\tconst reportStyle = {\n\t\theight: '75vh'\n\t};\n\n\tconst basicFilter = {\n\t\t$schema: \"http://powerbi.com/product/schema#basic\",\n\t\ttarget: {\n\t\t\ttable: \"Usuarios\",\n\t\t\tcolumn: \"Usuario\"\n\t\t},\n\t\toperator: \"Is\",\n\t\tvalues: [user.name],\n\t\tfilterType: 1\n\t};\n\n\tconst renderSettings = {\n\t\tfilterPaneEnabled: false,\n\t\t//navContentPaneEnabled: false,\n\t};\n\n\tfunction printReport() {\n\t\tif (report) report.print();\n\t}\n\n\tuseEffect(() => {\n\n\t\tuserService.getEmbedTokenBI()\n\t\t\t.then(res => {\n\t\t\t\tres.data.embedUrl = 'https://app.powerbi.com/reportEmbed?reportId=' + reportsBI.reportID + '&groupId=' + reportsBI.groupID;\n\t\t\t\tres.data.reportId = reportsBI.reportID;\n\n\t\t\t\tsetTokenData(res.data);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log('Erro: ' + error.response.data);\n\t\t\t});\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Grid height='100%'>\n\t\t\t\t<Grid item className={classes.grid}>\n\t\t\t\t\t{tokenData.embedToken == null || tokenData.embedToken.length === 0 ? (\n\t\t\t\t\t\t<p>Carregando dados do relatório...</p>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Report embedType=\"report\"\n\t\t\t\t\t\t\t\ttokenType='AAD'\n\t\t\t\t\t\t\t\taccessToken={tokenData.embedToken}\n\t\t\t\t\t\t\t\tembedUrl={tokenData.embedUrl}\n\t\t\t\t\t\t\t\tembedId={tokenData.reportId}\n\t\t\t\t\t\t\t\tpermissions='View'\n\t\t\t\t\t\t\t\tstyle={reportStyle}\n\t\t\t\t\t\t\t\textraSettings={renderSettings}\n\t\t\t\t\t\t\t\tonLoad={(report) => {\n\t\t\t\t\t\t\t\t\tsetReport(report);\n\t\t\t\t\t\t\t\t\treport.setFilters([basicFilter]).catch((errors) => {\n\t\t\t\t\t\t\t\t\t\tconsole.log(errors);\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t\t<Grid container justify=\"flex-end\">\n\t\t\t\t\t<Button\n\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tsize=\"medium\"\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tonClick={printReport}\n\t\t\t\t\t>Imprimir Relatório</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</>\n\t);\n}\n\nexport { DetailDashboard };\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { DetailDashboard } from './DetailDashboard';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n}));\n\nfunction Dashboard({ match }) {\n  const { path } = match;\n  const classes = useStyles();\n\n  return (\n    <Grid>\n      <Grid item>\n        <Paper className={classes.paper}>\n          <Switch>\n            <Route path={path} component={DetailDashboard} />\n          </Switch>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport { Dashboard };\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Grid,\n  TextField,\n  Typography,\n  Button,\n  FormHelperText,\n  Paper,\n  Collapse,\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MailOutline, LockOutlined, Visibility, VisibilityOff } from '@material-ui/icons';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport { accountService } from '../../services';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '90vh',\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  inputField: {\n    width: 300,\n  },\n  paper: {\n    padding: '1rem',\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontSize: 16,\n    padding: '6px 12px',\n    width: 180,\n    lineHeight: 1.5,\n  },\n  forgotLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n}));\n\nfunction Login({ history, location }) {\n  const classes = useStyles();\n\n  const [passwordType, setPasswordType] = useState(true);\n  const [visibility, setVisibility] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [message, setMessage] = useState('');\n\n  const { handleSubmit, handleChange, values, errors, touched } = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string()\n        .email('O e-mail é inválido!')\n        .required('O e-mail é obrigatório!'),\n      password: Yup.string()\n        .min(6, 'A senha precisa conter no mínimo 6 caracteres!')\n        .required('É necessário informar a senha!'),\n    }),\n    onSubmit: (values) => {\n      accountService.login(values)\n        .then(() => {\n          //const { from } = location.state || { from: { pathname: '/' } };\n          history.push('/');\n        })\n        .catch(error => {\n          setMessage(error.message);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessage('');\n          }, 5000);\n        })\n    },\n  });\n\n  const handleClickVisibility = () => {\n    setVisibility(!visibility);\n    setPasswordType(!passwordType);\n  };\n\n  return (\n    <Grid\n      container\n      className={classes.root}\n      data-testid=\"login\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          <Grid container alignItems=\"center\" direction=\"column\" spacing={4}>\n            <Grid item>\n              <Typography variant=\"h4\" data-testid=\"login-title\">\n                Login\n              </Typography>\n            </Grid>\n            <Grid item>\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                variant=\"outlined\"\n                size=\"small\"\n                placeholder=\" email@email.com.br\"\n                className={classes.inputField}\n                onChange={handleChange}\n                value={values.email}\n                InputProps={{\n                  startAdornment: <MailOutline color=\"primary\" />,\n                }}\n                error={touched.email && errors.email ? true : ''}\n              />\n              <FormHelperText error={errors.email}>{errors.email}</FormHelperText>\n            </Grid>\n            <Grid item>\n              <TextField\n                id=\"password\"\n                name=\"password\"\n                label=\"Senha\"\n                variant=\"outlined\"\n                size=\"small\"\n                placeholder=\" Senha\"\n                onChange={handleChange}\n                value={values.password}\n                className={classes.inputField}\n                type={passwordType ? 'password' : 'text'}\n                InputProps={{\n                  startAdornment: <LockOutlined color=\"primary\" />,\n                  endAdornment: visibility ? (\n                    <Visibility color=\"primary\" onClick={handleClickVisibility} />\n                  ) : (\n                      <VisibilityOff color=\"primary\" onClick={handleClickVisibility} />\n                    ),\n                }}\n                error={Boolean(touched.password && errors.password)}\n              />\n              <FormHelperText error={Boolean(touched.password && errors.password)}>\n                {touched.password && errors.password ? errors.password : ''}\n              </FormHelperText>\n            </Grid>\n            <Grid item>\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"medium\"\n                variant=\"contained\"\n                className={classes.button}\n              >\n                Entrar\n              </Button>\n            </Grid>\n            <Grid item>\n              <Typography>\n                <Link to=\"forgotpassword\" className={classes.forgotLink}>\n                  Esqueceu a senha?\n                </Link>\n              </Typography>\n            </Grid>\n          </Grid>\n        </form>\n        <Collapse in={open}>\n          <Alert severity=\"error\">\n            <AlertTitle>Erro</AlertTitle>\n            Não foi possível realizar o login — <strong>{message}!</strong>\n          </Alert>\n        </Collapse>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport { Login };\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  Grid,\n  TextField,\n  Typography,\n  Button,\n  FormHelperText,\n  Paper,\n  Collapse\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { MailOutline } from '@material-ui/icons';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { accountService } from '../../services';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '90vh',\n    width: '100%',\n  },\n  outlinedRoot: {\n    '&:hover': {\n      borderColor: 'red',\n    },\n  },\n  emailInput: {\n    width: 300,\n  },\n  paper: {\n    padding: '1rem',\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontSize: 16,\n    padding: '6px 12px',\n    width: 200,\n    lineHeight: 1.5,\n  },\n  cancelLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n}));\n\nfunction ForgotPassword({ history, location }) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const { handleSubmit, handleChange, values, errors } = useFormik({\n    initialValues: {\n      email: '',\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string()\n        .email('O e-mail é inválido!')\n        .required('O e-mail é obrigatório!'),\n    }),\n    onSubmit: (values) => {\n      setOpen(true);\n      accountService.forgotPassword(values.email)\n        .then(() => {\n          setTimeout(() => {\n            setOpen(false)\n          }, 5000);\n        })\n        .catch(error => {\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n          }, 5000);\n        })\n    },\n  });\n\n  return (\n    <Grid\n      container\n      className={classes.root}\n      data-testid=\"forgotpassword\"\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          <Grid container alignItems=\"center\" direction=\"column\" spacing={4}>\n            <Grid item>\n              <Typography variant=\"h4\" data-testid=\"forgot-password\">\n                Esqueci a senha\n              </Typography>\n            </Grid>\n            <Grid item>\n              <TextField\n                id=\"email\"\n                name=\"email\"\n                label=\"Email\"\n                variant=\"outlined\"\n                size=\"small\"\n                placeholder=\" email@email.com.br\"\n                onChange={handleChange}\n                value={values.email}\n                className={classes.emailInput}\n                InputProps={{\n                  classes: {\n                    input: classes.outlinedRoot,\n                  },\n                  startAdornment: <MailOutline color=\"primary\" />,\n                }}\n                error={errors.email}\n              />\n              <FormHelperText error={errors.email}>{errors.email}</FormHelperText>\n            </Grid>\n            <Grid item>\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"medium\"\n                variant=\"contained\"\n                className={classes.button}\n              >\n                Enviar\n              </Button>\n              <Link to=\"login\" className={classes.cancelLink}>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  size=\"medium\"\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  Voltar\n                </Button>\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n        <Collapse in={open}>\n          <Alert severity=\"success\">\n            <AlertTitle>Sucesso</AlertTitle>\n            Uma nova senha foi enviadao para o seu email — <strong>{values.email}!</strong>\n          </Alert>\n        </Collapse>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport { ForgotPassword };\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { Grid, TextField, Button, Typography, Paper, FormHelperText, Collapse } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Visibility, VisibilityOff, LockOutlined } from '@material-ui/icons';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport { accountService } from '../../services';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '90vh',\n    width: '100%',\n    '& > * + *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n  inputField: {\n    width: 300,\n  },\n  paper: {\n    padding: '1rem',\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontSize: 16,\n    padding: '6px 12px',\n    width: 180,\n    lineHeight: 1.5,\n  },\n  homeLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n}));\n\nfunction ResetPassword(path) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState('');\n  const [passwordType, setPasswordType] = useState(true);\n  const [visibility, setVisibility] = useState(false);\n\n  let urlToken = {};\n  window.location.search.split('&').toString().substr(1).split(\",\").forEach(item => {\n    urlToken[item.split(\"=\")[0]] = decodeURIComponent(item.split(\"=\")[1]) ? item.split(\"=\")[1] : \"No query strings available\";\n  });\n\n\n  const { handleSubmit, handleChange, values, errors, touched } = useFormik({\n    initialValues: {\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: Yup.object().shape({\n      password: Yup.string()\n        .min(6, 'A senha precisa conter no mínimo 6 caracteres!')\n        .required('É necessário informar a senha!'),\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password')], 'As senhas não conferem!')\n        .required('É necessário informar a senha novamente!'),\n    }),\n    onSubmit: (values) => {\n      accountService.resetPassword(urlToken.token, values)\n        .then(() => {\n          setIsError(false);\n          setMessage(\"Senha alterada com sucesso!\");\n          setOpen(true);\n\n          setTimeout(() => {\n            setOpen(false);\n            setMessage('');\n          }, 5000);\n        })\n        .catch(error => {\n          setIsError(true);\n          setMessage(error.message);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessage('');\n          }, 5000);\n        })\n    }\n  });\n\n  const handleClickVisibility = () => {\n    setVisibility(!visibility);\n    setPasswordType(!passwordType);\n  };\n\n  return (\n    <Grid\n      container\n      className={classes.root}\n      justify=\"center\"\n      alignItems=\"center\"\n    >\n      <Paper className={classes.paper}>\n        <form onSubmit={handleSubmit}>\n          <Grid container alignItems=\"center\" direction=\"column\" spacing={4}>\n            <Grid item>\n              <Typography variant=\"h4\" color=\"textPrimary\">\n                Nova senha\n            </Typography>\n            </Grid>\n\n            <Grid item>\n              <TextField\n                id=\"password\"\n                name=\"password\"\n                label=\"Senha Nova\"\n                variant=\"outlined\"\n                size=\"small\"\n                placeholder=\"Senha nova\"\n                onChange={handleChange}\n                value={values.password}\n                className={classes.inputField}\n                type={passwordType ? 'password' : 'text'}\n                InputProps={{\n                  startAdornment: <LockOutlined color=\"primary\" />,\n                  endAdornment: visibility ? (\n                    <Visibility color=\"primary\" onClick={handleClickVisibility} />\n                  ) : (\n                      <VisibilityOff color=\"primary\" onClick={handleClickVisibility} />\n                    ),\n                }}\n                error={Boolean(touched.password && errors.password)}\n              />\n              <FormHelperText\n                error={Boolean(touched.password && errors.password)}\n              >\n                {touched.password && errors.password ? errors.password : ''}\n              </FormHelperText>\n            </Grid>\n            <Grid item>\n              <TextField\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                label=\"Confirmar Senha Nova\"\n                variant=\"outlined\"\n                size=\"small\"\n                placeholder=\"Confirmar senha\"\n                onChange={handleChange}\n                value={values.confirmPassword}\n                className={classes.inputField}\n                type={passwordType ? 'password' : 'text'}\n                InputProps={{\n                  startAdornment: <LockOutlined color=\"primary\" />,\n                  endAdornment: visibility ? (\n                    <Visibility color=\"primary\" onClick={handleClickVisibility} />\n                  ) : (\n                      <VisibilityOff color=\"primary\" onClick={handleClickVisibility} />\n                    ),\n                }}\n                error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n              />\n              <FormHelperText\n                error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n              >\n                {touched.confirmPassword && errors.confirmPassword ? errors.confirmPassword : ''}\n              </FormHelperText>\n            </Grid>\n            <Grid item>\n              <Button\n                type=\"submit\"\n                color=\"primary\"\n                size=\"medium\"\n                variant=\"contained\"\n                className={classes.button}\n              >Salvar Senha\n            </Button>\n              <Link to=\"login\" className={classes.homeLink}>\n                <Button\n                  type=\"submit\"\n                  color=\"primary\"\n                  size=\"medium\"\n                  variant=\"contained\"\n                  className={classes.button}\n                >\n                  Login\n                </Button>\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n        <Collapse in={open}>\n          {\n            isError ? (\n              <Alert severity='error'>\n                <AlertTitle>Erro</AlertTitle>\n                Não foi possível alterar a senha — <strong>{message}!</strong>\n              </Alert>\n            ) : (\n                <Alert severity='success'>\n                  <AlertTitle>Sucesso</AlertTitle>\n                  Senha alterada com Sucesso\n              </Alert>\n              )\n          }\n        </Collapse>\n      </Paper>\n    </Grid>\n  );\n}\n\nexport { ResetPassword };","import React, { useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Container from '@material-ui/core/Container';\n\nimport { Login } from './Login';\nimport { ForgotPassword } from './ForgotPassword';\nimport { ResetPassword } from './ResetPassword';\nimport { accountService } from '../../services';\n\nfunction Account({ history, match }) {\n  const { path } = match;\n\n  useEffect(() => {\n    if (accountService.userValue) {\n      history.push('/');\n    }\n  }, [history]);\n\n  return (\n    <>\n      <Container maxWidth=\"sm\">\n        <Switch>\n          <Route path={`${path}/login`} component={Login} />\n          <Route path={`${path}/forgotpassword`} component={ForgotPassword} />\n          <Route path={`${path}/resetpassword`} component={ResetPassword} />\n        </Switch>\n      </Container>\n    </>\n  );\n}\n\nexport { Account };\n","import React, { useState } from 'react';\n\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\nimport { Grid, TextField, Button, Typography, Paper, FormHelperText, Collapse } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Visibility, VisibilityOff } from '@material-ui/icons';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport { accountService, userService } from '../../services';\nimport { Role } from '../../helpers';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(1),\n  },\n  inputField: {\n    margin: '6px',\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontSize: 16,\n    padding: '6px 12px',\n    width: 180,\n    lineHeight: 1.5,\n  },\n}));\n\nfunction Details() {\n  const classes = useStyles();\n  const user = accountService.userValue;\n  const [open, setOpen] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [message, setMessage] = useState('');\n  const [passwordType, setPasswordType] = useState(true);\n  const [visibility, setVisibility] = useState(false);\n\n  const { handleSubmit, handleChange, values, errors, touched } = useFormik({\n    initialValues: {\n      password: '',\n      confirmPassword: '',\n    },\n    validationSchema: Yup.object().shape({\n      password: Yup.string()\n        .min(6, 'A senha precisa conter no mínimo 6 caracteres!')\n        .required('É necessário informar a senha!'),\n      confirmPassword: Yup.string()\n        .oneOf([Yup.ref('password')], 'As senhas não conferem!')\n        .required('É necessário informar a senha novamente!'),\n    }),\n    onSubmit: (values) => {\n      userService.updatePassword(user.id, values)\n        .then(() => {\n          setIsError(false);\n          setMessage(\"Senha alterada com sucesso!\");\n          setOpen(true);\n\n          setTimeout(() => {\n            setOpen(false);\n            setMessage('');\n          }, 5000);\n        })\n        .catch(error => {\n          setIsError(true);\n          setMessage(error.message);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessage('');\n          }, 5000);\n        })\n    }\n  });\n\n  const handleClickVisibility = () => {\n    setVisibility(!visibility);\n    setPasswordType(!passwordType);\n  };\n\n  return (\n    <Paper>\n      <form onSubmit={handleSubmit}>\n        <Grid className={classes.root}>\n          <Grid item>\n            <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\" component=\"p\">\n              Usuário - Perfil {user.role === Role.Admin && \"Administrador\"}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <TextField\n              disabled\n              fullWidth\n              id=\"name-disabled\"\n              label=\"Usuário\"\n              size=\"small\"\n              className={classes.inputField}\n              defaultValue={user.name}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              disabled\n              fullWidth\n              id=\"email-disabled\"\n              label=\"Email\"\n              size=\"small\"\n              className={classes.inputField}\n              defaultValue={user.email}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid container>\n            <Grid item>\n              <TextField\n                id=\"password\"\n                name=\"password\"\n                label=\"Senha Nova\"\n                variant=\"outlined\"\n                size=\"small\"\n                placeholder=\"Senha nova\"\n                onChange={handleChange}\n                value={values.password}\n                className={classes.inputField}\n                type={passwordType ? 'password' : 'text'}\n                InputProps={{\n                  endAdornment: visibility ? (\n                    <Visibility color=\"primary\" onClick={handleClickVisibility} />\n                  ) : (\n                      <VisibilityOff color=\"primary\" onClick={handleClickVisibility} />\n                    ),\n                }}\n                error={Boolean(touched.password && errors.password)}\n              />\n              <FormHelperText\n                error={Boolean(touched.password && errors.password)}\n              >\n                {touched.password && errors.password ? errors.password : ''}\n              </FormHelperText>\n            </Grid>\n            <Grid item>\n              <TextField\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                label=\"Confirmar Senha\"\n                variant=\"outlined\"\n                size=\"small\"\n                placeholder=\"Confirmar senha\"\n                onChange={handleChange}\n                value={values.confirmPassword}\n                className={classes.inputField}\n                type={passwordType ? 'password' : 'text'}\n                InputProps={{\n                  endAdornment: visibility ? (\n                    <Visibility color=\"primary\" onClick={handleClickVisibility} />\n                  ) : (\n                      <VisibilityOff color=\"primary\" onClick={handleClickVisibility} />\n                    ),\n                }}\n                error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n              />\n              <FormHelperText\n                error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n              >\n                {touched.confirmPassword && errors.confirmPassword ? errors.confirmPassword : ''}\n              </FormHelperText>\n            </Grid>\n          </Grid>\n          <Grid container justify=\"flex-end\">\n            <Button\n              type=\"submit\"\n              color=\"primary\"\n              size=\"medium\"\n              variant=\"contained\"\n              className={classes.button}\n            >Salvar Senha</Button>\n          </Grid>\n        </Grid>\n      </form>\n      <Collapse in={open}>\n        {\n          isError ? (\n            <Alert severity='error'>\n              <AlertTitle>Erro</AlertTitle>\n              Não foi possível alterar a senha — <strong>{message}!</strong>\n            </Alert>\n          ) : (\n              <Alert severity='success'>\n                <AlertTitle>Sucesso</AlertTitle>\n                Senha alterada com Sucesso\n              </Alert>\n            )\n        }\n      </Collapse>\n    </Paper>\n  );\n}\n\nexport { Details };","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Details } from './Details';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n}));\n\nfunction Profile({ match }) {\n  const { path } = match;\n  const classes = useStyles();\n\n  return (\n    <Grid>\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={classes.paper}>\n          <Switch>\n            <Route path={path} component={Details} />\n          </Switch>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport { Profile };\n","import React, { useState, useEffect } from 'react';\n\nimport { Grid, Typography, Collapse } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport { accountService, groupService, goalService } from '../../services';\nimport AppTable from '../../components/Table';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontSize: 16,\n    padding: '6px 12px',\n    width: 200,\n    lineHeight: 1.5,\n  },\n}));\n\nfunction ListGoal() {\n  const classes = useStyles();\n  const [tableData, setTableData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [listGroups, setListGroups] = useState([]);\n  const user = accountService.userValue;\n\n  const columns = [\n    { title: \"id\", field: \"id\", hidden: true },\n    { title: 'Usuário', field: 'goalUserID', hidden: true },\n    { title: 'Grupo', field: 'goalGroupID', lookup: { ...listGroups }, editable: 'never' },\n    {\n      title: 'Descrição da Meta',\n      field: 'description',\n      editable: 'never',\n      headerStyle: {\n        width: '70%',\n      },\n      cellStyle: {\n        width: '70%',\n      },\n    },\n    {\n      title: 'Ativo',\n      field: 'active',\n      lookup: { true: 'Sim', false: 'Não' },\n      headerStyle: {\n        textAlign: 'center',\n      },\n      cellStyle: {\n        textAlign: 'center',\n      },\n    },\n    {\n      title: 'Tipo Valor',\n      field: 'typeValue',\n      editable: 'onUpdate',\n      lookup: { '%': '%', 'R$': 'R$' },\n      headerStyle: {\n        textAlign: 'center',\n        width: '5%',\n      },\n      cellStyle: {\n        textAlign: 'center',\n      },\n    },\n    { title: 'Valor', field: 'value', type: 'numeric', editable: 'onUpdate' },\n  ];\n\n  const rowUpdate = (newData, oldData, resolve) => {\n    let errorList = [];\n\n    if (newData.active === undefined) {\n      errorList.push(\"Por favor, informe se a meta está ativa!\");\n    };\n\n    if (errorList.length < 1) {\n      goalService.updateGoalUser(newData.id, newData)\n        .then(res => {\n          const dataUpdate = [...tableData];\n          const index = oldData.tableData.id;\n          dataUpdate[index] = newData;\n          setTableData([...dataUpdate]);\n          setIsError(false);\n          setMessages(['Usuário atualizado com sucesso!']);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessages([]);\n          }, 5000);\n          resolve();\n          updateListGoals();\n        })\n        .catch(error => {\n          setIsError(true);\n          setMessages(['Erro: ' + error.response.data]);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessages([]);\n          }, 5000);\n          console.log('Erro: ' + error);\n          resolve();\n        })\n    } else {\n      setIsError(true);\n      setMessages(['Erro: ' + errorList]);\n      setOpen(true);\n      setTimeout(() => {\n        setOpen(false);\n        setMessages([]);\n      }, 5000);\n      resolve();\n    }\n  };\n\n  const updateListGoals = () => {\n\n    groupService.getGroups()\n      .then(res => {\n        let listNames = res.data.reduce(function (acc, cur) {\n          acc[cur.id] = cur.name;\n\n          return acc;\n        }, {});\n\n        setListGroups(listNames);\n      })\n      .catch(error => {\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error);\n      });\n\n    goalService.getGoalUserById(user.id)\n      .then(res => {\n        setTableData(res.data);\n      })\n      .catch(error => {\n        setIsError(true);\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error.response.data);\n      });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    updateListGoals();\n\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <Grid className={classes.root}>\n      <Grid item>\n        <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\" component=\"p\">\n          Usuário - Metas\n        </Typography>\n      </Grid>\n      <Grid item>\n        <AppTable\n          data={tableData}\n          columns={columns}\n          isLoading={isLoading}\n          editable={{\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                rowUpdate(newData, oldData, resolve);\n              }),\n          }}\n        />\n        <Collapse in={open}>\n          {isError ?\n            <Alert severity=\"error\">\n              {messages.map((msg, i) => {\n                return <div key={i}>{msg}</div>\n              })}\n            </Alert>\n            :\n            <Alert severity=\"success\">\n              <AlertTitle>Sucesso</AlertTitle>\n              {messages.map((msg, i) => {\n                return <div key={i}>{msg}</div>\n              })}\n            </Alert>\n          }\n        </Collapse>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport { ListGoal };\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { ListGoal } from './ListGoal';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n}));\n\nfunction Goal({ match }) {\n  const { path } = match;\n  const classes = useStyles();\n\n  return (\n    <Grid>\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={classes.paper}>\n          <Switch>\n            <Route path={path} component={ListGoal} />\n          </Switch>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport { Goal };\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { Typography, Grid } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n  },\n}));\n\nfunction HomeAdmin({ match }) {\n  const { path } = match;\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\" component=\"p\">\n        Bem vindo, Administrador\n      </Typography>\n      <Grid>\n        <Grid item>\n          <Typography variant=\"h5\" align=\"left\" color=\"textSecondary\" component=\"p\">\n            <Link to={`${path}/users`} className={classes.link}>\n              {' '}\n              - Cadastro de Usuários\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h5\" align=\"left\" color=\"textSecondary\" component=\"p\">\n            <Link to={`${path}/groups`} className={classes.link}>\n              {' '}\n              - Cadastro de Grupos\n            </Link>\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h5\" align=\"left\" color=\"textSecondary\" component=\"p\">\n            <Link to={`${path}/goals`} className={classes.link}>\n              {' '}\n              - Cadastro de Metas de Usuários\n            </Link>\n          </Typography>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\nexport { HomeAdmin };\n","import React, { useState, useEffect } from 'react';\n\nimport { Grid, Typography, Collapse } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport { userService } from '../../services';\nimport AppTable from '../../components/Table';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontSize: 16,\n    padding: '6px 12px',\n    width: 200,\n    lineHeight: 1.5,\n  },\n}));\n\nfunction ListUser() {\n  const classes = useStyles();\n  const [tableData, setTableData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const [columns] = useState([\n    { title: 'Usuário', field: 'name' },\n    { title: 'Email', field: 'email' },\n    { title: 'Nome', field: 'firstName' },\n    { title: 'Sobrenome', field: 'lastName' },\n    {\n      title: 'Ativo',\n      field: 'active',\n      lookup: { true: 'Sim', false: 'Não' },\n      headerStyle: {\n        textAlign: 'center',\n      },\n      cellStyle: {\n        textAlign: 'center',\n      },\n    },\n    {\n      title: 'Permissão',\n      field: 'role',\n      lookup: { 'Admin': 'Admin', 'User': 'User' },\n    },\n  ]);\n\n  const rowAdd = (newData, resolve) => {\n    let errorList = []\n    if (newData.name === undefined) {\n      errorList.push(\"Por favor, informe um nome!\");\n    }\n    if (newData.email === undefined) {\n      errorList.push(\"Por favor, informe o email!\");\n    }\n    if (newData.active === undefined) {\n      errorList.push(\"Por favor, informe se o usuário está ativo!\");\n    }\n    if (newData.role === undefined) {\n      errorList.push(\"Por favor, informe a permissão do usuário!\");\n    }\n\n    if (errorList.length < 1) {\n      userService.createUser(newData)\n        .then(res => {\n          let dataToAdd = [...tableData];\n          dataToAdd.push(newData);\n          setTableData([...dataToAdd]);\n          setIsError(false);\n          setMessages(['Usuário criado com sucesso!']);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessages([]);\n          }, 5000);\n          resolve();\n          updateListUsers();\n        })\n        .catch(error => {\n          setIsError(true);\n          setMessages(['Erro: ' + error.response.data]);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessages([]);\n          }, 5000);\n        })\n    } else {\n      setIsError(true);\n      setMessages(['Erro: ' + errorList]);\n      setOpen(true);\n      setTimeout(() => {\n        setOpen(false);\n        setMessages([]);\n      }, 5000);\n      resolve();\n    }\n  };\n\n  const rowUpdate = (newData, oldData, resolve) => {\n    userService.updateUser(newData.id, newData)\n      .then(res => {\n        const dataUpdate = [...tableData];\n        const index = oldData.tableData.id;\n        dataUpdate[index] = newData;\n        setTableData([...dataUpdate]);\n        setIsError(false);\n        setMessages(['Usuário atualizado com sucesso!']);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        resolve();\n        updateListUsers();\n      })\n      .catch(error => {\n        setIsError(true);\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error.response.data);\n        resolve();\n      })\n  }\n\n  const rowDelete = (oldData, resolve) => {\n    userService.deleteUser(oldData.id)\n      .then(res => {\n        const dataDelete = [...tableData];\n        const index = oldData.tableData.id;\n        dataDelete.splice(index, 1);\n        setTableData([...dataDelete]);\n        setIsError(false);\n        setMessages(['Usuário excluído com sucesso!']);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        resolve();\n        updateListUsers();\n      })\n      .catch(error => {\n        setIsError(true);\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error.response.data);\n        resolve();\n      })\n  };\n\n  const updateListUsers = () => {\n\n    userService.getUsers()\n      .then(res => {\n        setTableData(res.data);\n      })\n      .catch(error => {\n        setIsError(true);\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error.response.data);\n      });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n    setMessages([]);\n    setOpen(false);\n\n    updateListUsers();\n\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <Grid className={classes.root}>\n      <Grid item>\n        <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\" component=\"p\">\n          Administrador - Lista de Usuários\n        </Typography>\n      </Grid>\n      <Grid item>\n        <AppTable\n          data={tableData}\n          columns={columns}\n          isLoading={isLoading}\n          editable={{\n            onRowAdd: (newData) =>\n              new Promise((resolve) => {\n                rowAdd(newData, resolve)\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                rowUpdate(newData, oldData, resolve);\n              }),\n            onRowDelete: (oldData) =>\n              new Promise((resolve) => {\n                rowDelete(oldData, resolve);\n              })\n          }}\n        />\n        <Collapse in={open}>\n          {isError ?\n            <Alert severity=\"error\">\n              {messages.map((msg, i) => {\n                return <div key={i}>{msg}</div>\n              })}\n            </Alert>\n            :\n            <Alert severity=\"success\">\n              <AlertTitle>Sucesso</AlertTitle>\n              {messages.map((msg, i) => {\n                return <div key={i}>{msg}</div>\n              })}\n            </Alert>\n          }\n        </Collapse>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport { ListUser };\n","import React, { useState, useEffect } from 'react';\n\nimport { Grid, Typography, Collapse } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport { groupService } from '../../services';\nimport AppTable from '../../components/Table';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontSize: 16,\n    padding: '6px 12px',\n    width: 200,\n    lineHeight: 1.5,\n  },\n}));\n\nconst columns = [\n  { title: \"id\", field: \"id\", hidden: true },\n  {\n    title: 'Grupo',\n    field: 'name',\n  },\n  {\n    title: 'Descrição da Meta',\n    field: 'description',\n    headerStyle: {\n      width: '70%',\n    },\n    cellStyle: {\n      width: '70%',\n    },\n  },\n  {\n    title: 'Ativo',\n    field: 'active',\n    lookup: { true: 'Sim', false: 'Não' },\n    headerStyle: {\n      textAlign: 'center',\n    },\n    cellStyle: {\n      textAlign: 'center',\n    },\n  },\n];\n\nfunction ListGroup() {\n  const classes = useStyles();\n  const [tableData, setTableData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [open, setOpen] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const rowAdd = (newData, resolve) => {\n    let errorList = []\n    if (newData.name === undefined) {\n      errorList.push(\"Por favor, informe um nome para o grupo!\");\n    }\n    if (newData.description === undefined) {\n      errorList.push(\"Por favor, informe a descrição do grupo!\");\n    }\n    if (newData.active === undefined) {\n      errorList.push(\"Por favor, informe se o grupo está ativo!\");\n    }\n\n    if (errorList.length < 1) {\n      groupService.createGroup(newData)\n        .then(res => {\n          let dataToAdd = [...tableData];\n          dataToAdd.push(newData);\n          setTableData([...dataToAdd]);\n          setIsError(false);\n          setMessages(['Grupo criado com sucesso!']);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessages([]);\n          }, 5000);\n          resolve();\n          updateListGroups();\n        })\n        .catch(error => {\n          setIsError(true);\n          setMessages(['Erro: ' + error.response.data]);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessages([]);\n          }, 5000);\n        })\n    } else {\n      setIsError(true);\n      setMessages(['Erro: ' + errorList]);\n      setOpen(true);\n      setTimeout(() => {\n        setOpen(false);\n        setMessages([]);\n      }, 5000);\n      resolve();\n    }\n  };\n\n  const rowUpdate = (newData, oldData, resolve) => {\n    groupService.updateGroup(newData.id, newData)\n      .then(res => {\n        const dataUpdate = [...tableData];\n        const index = oldData.tableData.id;\n        dataUpdate[index] = newData;\n        setTableData([...dataUpdate]);\n        setIsError(false);\n        setMessages(['Grupo atualizado com sucesso!']);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        resolve();\n        updateListGroups();\n      })\n      .catch(error => {\n        setIsError(true);\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error.response.data);\n        resolve();\n      })\n  }\n\n  const rowDelete = (oldData, resolve) => {\n    groupService.deleteGroup(oldData.id)\n      .then(res => {\n        const dataDelete = [...tableData];\n        const index = oldData.tableData.id;\n        dataDelete.splice(index, 1);\n        setTableData([...dataDelete]);\n        setIsError(false);\n        setMessages(['Grupo excluído com sucesso!']);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        resolve();\n        updateListGroups();\n      })\n      .catch(error => {\n        setIsError(true);\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error.response.data);\n        resolve();\n      })\n  };\n\n  const updateListGroups = () => {\n\n    groupService.getGroups()\n      .then(res => {\n        setTableData(res.data);\n      })\n      .catch(error => {\n        setIsError(true);\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error.response.data);\n      });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n    setIsError(false);\n    setMessages([]);\n    setOpen(false);\n\n    updateListGroups();\n\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <Grid className={classes.root}>\n      <Grid item>\n        <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\" component=\"p\">\n          Administrador - Lista de Grupos\n        </Typography>\n      </Grid>\n      <Grid item>\n        <AppTable\n          data={tableData}\n          columns={columns}\n          isLoading={isLoading}\n          editable={{\n            onRowAdd: (newData) =>\n              new Promise((resolve) => {\n                rowAdd(newData, resolve)\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                rowUpdate(newData, oldData, resolve);\n              }),\n            onRowDelete: (oldData) =>\n              new Promise((resolve) => {\n                rowDelete(oldData, resolve);\n              })\n          }}\n        />\n        <Collapse in={open}>\n          {isError ?\n            <Alert severity=\"error\">\n              {messages.map((msg, i) => {\n                return <div key={i}>{msg}</div>\n              })}\n            </Alert>\n            :\n            <Alert severity=\"success\">\n              <AlertTitle>Sucesso</AlertTitle>\n              {messages.map((msg, i) => {\n                return <div key={i}>{msg}</div>\n              })}\n            </Alert>\n          }\n        </Collapse>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport { ListGroup };\n","import React, { useState, useEffect } from 'react';\n\nimport { Grid, Typography, Collapse } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nimport { userService, groupService, goalService, } from '../../services';\nimport AppTable from '../../components/Table';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n    },\n  },\n  button: {\n    margin: theme.spacing(1),\n    fontSize: 16,\n    padding: '6px 12px',\n    width: 200,\n    lineHeight: 1.5,\n  },\n}));\n\nfunction ListUserGoal() {\n  const classes = useStyles();\n  const [tableData, setTableData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [listUsers, setListUsers] = useState([]);\n  const [listGroups, setListGroups] = useState([]);\n  // const [listGroupDesc, setListGroupDesc] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [messages, setMessages] = useState([]);\n\n  const columns = [\n    { title: 'Usuário', field: 'goalUserID', lookup: { ...listUsers } },\n    { title: 'Grupo', field: 'goalGroupID', lookup: { ...listGroups } },\n    {\n      title: 'Descrição da Meta',\n      field: 'description',\n      headerStyle: {\n        width: '70%',\n      },\n      cellStyle: {\n        width: '70%',\n      },\n    },\n    {\n      title: 'Ativo',\n      field: 'active',\n      lookup: { true: 'Sim', false: 'Não' },\n      headerStyle: {\n        textAlign: 'center',\n      },\n      cellStyle: {\n        textAlign: 'center',\n      },\n    },\n    {\n      title: 'Tipo Valor',\n      field: 'typeValue',\n      lookup: { '%': '%', 'R$': 'R$' },\n      headerStyle: {\n        textAlign: 'center',\n        width: '5%',\n      },\n      cellStyle: {\n        textAlign: 'center',\n      },\n    },\n    { title: 'Valor', field: 'value', type: 'numeric' },\n  ];\n\n  const rowAdd = (newData, resolve) => {\n    let errorList = []\n    if (newData.goalUserID === undefined) {\n      errorList.push(\"Por favor, informe um usuário!\");\n    }\n    if (newData.goalGroupID === undefined) {\n      errorList.push(\"Por favor, informe o grupo!\");\n    }\n    if (newData.description === undefined) {\n      errorList.push(\"Por favor, informe uma descrição!\");\n    }\n    if (newData.active === undefined) {\n      errorList.push(\"Por favor, informe se a meta está ativa!\");\n    }\n\n    if (errorList.length < 1) {\n      goalService.createGoalUser(newData)\n        .then(res => {\n          let dataToAdd = [...tableData];\n          dataToAdd.push(newData);\n          setTableData([...dataToAdd]);\n          setIsError(false);\n          setMessages(['Meta criada com sucesso!']);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessages([]);\n          }, 5000);\n          resolve();\n          updateListGoals();\n        })\n        .catch(error => {\n          setMessages(['Erro: ' + error.response.data]);\n          setOpen(true);\n          setTimeout(() => {\n            setOpen(false);\n            setMessages([]);\n          }, 5000);\n          console.log('Erro: ' + error);\n        })\n    } else {\n      setIsError(true);\n      setMessages(['Erro: ' + errorList]);\n      setOpen(true);\n      setTimeout(() => {\n        setOpen(false);\n        setMessages([]);\n      }, 5000);\n      resolve();\n    }\n  };\n\n  const rowUpdate = (newData, oldData, resolve) => {\n    goalService.updateGoalUser(newData.id, newData)\n      .then(res => {\n        const dataUpdate = [...tableData];\n        const index = oldData.tableData.id;\n        dataUpdate[index] = newData;\n        setTableData([...dataUpdate]);\n        setIsError(false);\n        setMessages(['Meta atualizada com sucesso!']);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        resolve();\n        updateListGoals();\n      })\n      .catch(error => {\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error);\n        resolve();\n      })\n  };\n\n  const rowDelete = (oldData, resolve) => {\n    goalService.deleteGoalUser(oldData.id)\n      .then(res => {\n        const dataDelete = [...tableData];\n        const index = oldData.tableData.id;\n        dataDelete.splice(index, 1);\n        setTableData([...dataDelete]);\n        setIsError(false);\n        setMessages(['Meta excluída com sucesso!']);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        resolve();\n        updateListGoals();\n      })\n      .catch(error => {\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error);\n        resolve();\n      })\n  };\n\n  // const loadGroupDescription = (id) => {\n  //   var groupDesc = listGroupDesc.filter(function (id) {\n  //     return id = listGroupDesc.id;\n  //   });\n\n  //   //setTableData();\n  // };\n\n  const updateListGoals = () => {\n    userService.getUsers()\n      .then(res => {\n        let listNames = res.data.reduce(function (acc, cur) {\n          acc[cur.id] = cur.name;\n\n          return acc;\n        }, {});\n\n        setListUsers(listNames);\n      })\n      .catch(error => {\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error);\n      });\n\n    groupService.getGroups()\n      .then(res => {\n        let listNames = res.data.reduce(function (acc, cur) {\n          acc[cur.id] = cur.name;\n\n          return acc;\n        }, {});\n\n        // let listDesc = res.data.reduce(function (acc, cur) {\n        //   acc[cur.id] = cur.description;\n\n        //   return acc;\n        // }, {});\n\n        setListGroups(listNames);\n        // setListGroupDesc(listDesc);\n      })\n      .catch(error => {\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error);\n      });\n\n    goalService.getGoalsUsers()\n      .then(res => {\n        setTableData(res.data);\n      })\n      .catch(error => {\n        setMessages(['Erro: ' + error.response.data]);\n        setOpen(true);\n        setTimeout(() => {\n          setOpen(false);\n          setMessages([]);\n        }, 5000);\n        console.log('Erro: ' + error);\n      });\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    updateListGoals();\n\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <Grid className={classes.root}>\n      <Grid item>\n        <Typography variant=\"h5\" align=\"left\" color=\"textPrimary\" component=\"p\">\n          Administrador - Lista de Metas de Usuários\n        </Typography>\n      </Grid>\n      <Grid item>\n        <AppTable\n          data={tableData}\n          columns={columns}\n          isLoading={isLoading}\n          editable={{\n            onRowAdd: (newData) =>\n              new Promise((resolve) => {\n                rowAdd(newData, resolve)\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve) => {\n                rowUpdate(newData, oldData, resolve);\n              }),\n            onRowDelete: (oldData) =>\n              new Promise((resolve) => {\n                rowDelete(oldData, resolve);\n              })\n          }}\n        />\n        <Collapse in={open}>\n          {isError ?\n            <Alert severity=\"error\">\n              {messages.map((msg, i) => {\n                return <div key={i}>{msg}</div>\n              })}\n            </Alert>\n            :\n            <Alert severity=\"success\">\n              <AlertTitle>Sucesso</AlertTitle>\n              {messages.map((msg, i) => {\n                return <div key={i}>{msg}</div>\n              })}\n            </Alert>\n          }\n        </Collapse>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport { ListUserGoal };\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { Grid, Paper } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { HomeAdmin } from './HomeAdmin';\nimport { ListUser } from './ListUser';\nimport { ListGroup } from './ListGroup';\nimport { ListUserGoal } from './ListUserGoal';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n}));\n\nfunction Admin({ match }) {\n  const { path } = match;\n  const classes = useStyles();\n\n  return (\n    <Grid>\n      <Grid item xs={12} md={8} lg={9}>\n        <Paper className={classes.paper}>\n          <Switch>\n            <Route exact path={path} component={HomeAdmin} />\n            <Route path={`${path}/users`} component={ListUser} />\n            <Route path={`${path}/groups`} component={ListGroup} />\n            <Route path={`${path}/goals`} component={ListUserGoal} />\n          </Switch>\n        </Paper>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport { Admin };\n","import React from 'react';\nimport { Route, Switch, Redirect, useLocation } from 'react-router-dom';\n\nimport { Container } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { Navbar, Footer, PrivateRoute } from '../components';\nimport { Home } from '../pages/home/Index';\nimport { Dashboard } from '../pages/dashboard/Index';\nimport { Account } from '../pages/account/Index';\nimport { Profile } from '../pages/profile/Index';\nimport { Goal } from '../pages/goal/Index';\nimport { Admin } from '../pages/admin/Index';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  content: {\n    flexGrow: 1,\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(2),\n    paddingBottom: theme.spacing(2),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const { pathname } = useLocation();\n\n  return (\n    <div className=\"App\">\n      <div className={classes.root}>\n        <Navbar />\n        <main className={classes.content}>\n          <Container maxWidth='xl' className={classes.container}>\n            <Switch>\n              <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\n              <PrivateRoute exact path=\"/\" component={Home} />\n              <PrivateRoute path=\"/dashboard\" component={Dashboard} />\n              <PrivateRoute path=\"/goal\" component={Goal} />\n              <PrivateRoute path=\"/profile\" component={Profile} />\n              <PrivateRoute path=\"/admin\" component={Admin} />\n              <Route path=\"/account\" component={Account} />\n              <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n          </Container>\n        </main>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport { App };\n","import { red } from '@material-ui/core/colors';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#eee',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Router } from 'react-router-dom';\n\nimport { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport { history } from './helpers';\nimport { App } from './app/Index';\nimport theme from './helpers/theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Router history={history}>\n      <CssBaseline />\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}